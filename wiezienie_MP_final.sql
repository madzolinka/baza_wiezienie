-- MySQL Script generated by MySQL Workbench
-- Sat Jan 25 20:55:13 2025
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`przestepstwo`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`przestepstwo` (
  `id_przestepstwo` INT NOT NULL,
  `czy_trzezwy` TINYINT NOT NULL,
  `miejsce_zd` VARCHAR(45) NOT NULL,
  `data_zd` VARCHAR(45) NOT NULL,
  `godzina_zd` VARCHAR(45) NOT NULL,
  `punkt_kk` VARCHAR(45) NULL,
  PRIMARY KEY (`id_przestepstwo`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`dane_osobowe`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`dane_osobowe` (
  `id_daneos` INT NOT NULL,
  `imie` VARCHAR(45) NOT NULL,
  `nazwisko` VARCHAR(45) NOT NULL,
  `data_ur` DATE NOT NULL,
  `pesel` INT(11) NOT NULL,
  `miasto` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_daneos`),
  UNIQUE INDEX `iddane_osobowe_UNIQUE` (`id_daneos` ASC),
  UNIQUE INDEX `pesel_UNIQUE` (`pesel` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`sektor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`sektor` (
  `id_sektor` INT NOT NULL,
  `pietro` INT NOT NULL,
  `liczba_pracownikow` INT NOT NULL DEFAULT 0,
  `liczba_wiezniow` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`id_sektor`),
  UNIQUE INDEX `id_sektor_UNIQUE` (`id_sektor` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`cela`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`cela` (
  `id_cela` INT NOT NULL,
  `numer` INT NOT NULL,
  `prycze` INT NOT NULL,
  `rodzaj` VARCHAR(45) NOT NULL,
  `id_sektor` INT NOT NULL,
  PRIMARY KEY (`id_cela`, `id_sektor`),
  UNIQUE INDEX `id_cela_UNIQUE` (`id_cela` ASC),
  INDEX `fk_cela_sektor1_idx` (`id_sektor` ASC),
  CONSTRAINT `fk_cela_sektor1`
    FOREIGN KEY (`id_sektor`)
    REFERENCES `mydb`.`sektor` (`id_sektor`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`wiezien`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`wiezien` (
  `id_wiezien` INT NOT NULL,
  `id_daneos` INT NOT NULL,
  `id_cela` INT NOT NULL,
  PRIMARY KEY (`id_wiezien`, `id_daneos`, `id_cela`),
  UNIQUE INDEX `id_wiezien_UNIQUE` (`id_wiezien` ASC),
  INDEX `fk_wiezien_dane_osobowe1_idx` (`id_daneos` ASC),
  UNIQUE INDEX `id_daneos_UNIQUE` (`id_daneos` ASC),
  INDEX `fk_wiezien_cela1_idx` (`id_cela` ASC),
  CONSTRAINT `fk_wiezien_dane_osobowe1`
    FOREIGN KEY (`id_daneos`)
    REFERENCES `mydb`.`dane_osobowe` (`id_daneos`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_wiezien_cela1`
    FOREIGN KEY (`id_cela`)
    REFERENCES `mydb`.`cela` (`id_cela`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`wyrok`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`wyrok` (
  `id_wyrok` INT NOT NULL,
  `dlugosc_wyr` INT NOT NULL,
  `mozliwosc_zwolnienia` TINYINT NOT NULL,
  `id_wiezien` INT NOT NULL,
  PRIMARY KEY (`id_wyrok`, `id_wiezien`),
  UNIQUE INDEX `id_wyrok_UNIQUE` (`id_wyrok` ASC),
  INDEX `fk_wyrok_wiezien1_idx` (`id_wiezien` ASC),
  CONSTRAINT `fk_wyrok_wiezien1`
    FOREIGN KEY (`id_wiezien`)
    REFERENCES `mydb`.`wiezien` (`id_wiezien`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`pracownicy_wiezienia`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`pracownicy_wiezienia` (
  `id_pracownika` INT NOT NULL,
  `zawod` VARCHAR(45) NOT NULL,
  `stawka` FLOAT NOT NULL,
  `zatrudniony` DATE NOT NULL,
  `id_daneos` INT NOT NULL,
  `id_sektor` INT NOT NULL,
  PRIMARY KEY (`id_pracownika`, `id_daneos`, `id_sektor`),
  UNIQUE INDEX `id_pracownik_UNIQUE` (`id_pracownika` ASC),
  INDEX `fk_pracownicy_wiezienia_dane_osobowe1_idx` (`id_daneos` ASC),
  UNIQUE INDEX `id_daneos_UNIQUE` (`id_daneos` ASC),
  INDEX `fk_pracownicy_wiezienia_sektor1_idx` (`id_sektor` ASC),
  CONSTRAINT `fk_pracownicy_wiezienia_dane_osobowe1`
    FOREIGN KEY (`id_daneos`)
    REFERENCES `mydb`.`dane_osobowe` (`id_daneos`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_pracownicy_wiezienia_sektor1`
    FOREIGN KEY (`id_sektor`)
    REFERENCES `mydb`.`sektor` (`id_sektor`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`pobyt`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`pobyt` (
  `id_pobyt` INT NOT NULL,
  `data_przybycia` DATE NOT NULL,
  `data_wyjscia` DATE NOT NULL,
  `id_cela` INT NOT NULL,
  `id_wiezien` INT NOT NULL,
  PRIMARY KEY (`id_pobyt`, `id_cela`, `id_wiezien`),
  UNIQUE INDEX `id_pobyt_UNIQUE` (`id_pobyt` ASC),
  INDEX `fk_pobyt_cela1_idx` (`id_cela` ASC),
  INDEX `fk_pobyt_wiezien1_idx` (`id_wiezien` ASC),
  CONSTRAINT `fk_pobyt_cela1`
    FOREIGN KEY (`id_cela`)
    REFERENCES `mydb`.`cela` (`id_cela`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_pobyt_wiezien1`
    FOREIGN KEY (`id_wiezien`)
    REFERENCES `mydb`.`wiezien` (`id_wiezien`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`wizyty`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`wizyty` (
  `id_wizyty` INT NOT NULL,
  `data_wizyty` DATE NOT NULL,
  `godzina_wizyty` TIME NOT NULL,
  `id_wiezien` INT NOT NULL,
  `id_wizytujacy` INT NOT NULL,
  PRIMARY KEY (`id_wizyty`),
  UNIQUE INDEX `id_wizyty_UNIQUE` (`id_wizyty` ASC),
  INDEX `fk_wizyty_wiezien1_idx` (`id_wiezien` ASC),
  INDEX `fk_wizyty_dane_osobowe1_idx` (`id_wizytujacy` ASC),
  CONSTRAINT `fk_wizyty_wiezien1`
    FOREIGN KEY (`id_wiezien`)
    REFERENCES `mydb`.`wiezien` (`id_wiezien`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_wizyty_dane_osobowe1`
    FOREIGN KEY (`id_wizytujacy`)
    REFERENCES `mydb`.`dane_osobowe` (`id_daneos`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`biblioteka`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`biblioteka` (
  `id_wypozyczenia` INT NOT NULL,
  `gatunek` VARCHAR(45) NOT NULL,
  `data_wyp` DATE NOT NULL,
  `data_odd` DATE NOT NULL,
  `id_wiezien` INT NOT NULL,
  PRIMARY KEY (`id_wypozyczenia`),
  UNIQUE INDEX `idbiblioteka_UNIQUE` (`id_wypozyczenia` ASC),
  INDEX `fk_biblioteka_wiezien1_idx` (`id_wiezien` ASC),
  CONSTRAINT `fk_biblioteka_wiezien1`
    FOREIGN KEY (`id_wiezien`)
    REFERENCES `mydb`.`wiezien` (`id_wiezien`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`incydenty`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`incydenty` (
  `id_incydent` INT NOT NULL,
  `data_inc` DATE NOT NULL,
  `godzina_inc` TIME NOT NULL,
  `miejsce_inc` VARCHAR(45) NOT NULL,
  `smiertelny` TINYINT NOT NULL,
  `id_sprawca` INT NOT NULL,
  `id_ofiara` INT NOT NULL,
  PRIMARY KEY (`id_incydent`),
  UNIQUE INDEX `id_incydent_UNIQUE` (`id_incydent` ASC),
  INDEX `fk_sprawca_idx` (`id_sprawca` ASC),
  INDEX `fk_ofiara_idx` (`id_ofiara` ASC),
  CONSTRAINT `fk_sprawca`
    FOREIGN KEY (`id_sprawca`)
    REFERENCES `mydb`.`wiezien` (`id_wiezien`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_ofiara`
    FOREIGN KEY (`id_ofiara`)
    REFERENCES `mydb`.`wiezien` (`id_wiezien`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`spacerniak`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`spacerniak` (
  `godziny_spacerowania` TIME NOT NULL,
  `id_sektor` INT NOT NULL,
  PRIMARY KEY (`godziny_spacerowania`),
  INDEX `fk_spacerniak_sektor1_idx` (`id_sektor` ASC),
  UNIQUE INDEX `id_sektor_UNIQUE` (`id_sektor` ASC),
  CONSTRAINT `fk_spacerniak_sektor1`
    FOREIGN KEY (`id_sektor`)
    REFERENCES `mydb`.`sektor` (`id_sektor`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`przestepstwa_wyroki`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`przestepstwa_wyroki` (
  `id_przestepstwo` INT NOT NULL,
  `id_wyrok` INT NOT NULL,
  PRIMARY KEY (`id_przestepstwo`, `id_wyrok`),
  INDEX `fk_przestepstwo_has_wyrok_wyrok1_idx` (`id_wyrok` ASC),
  INDEX `fk_przestepstwo_has_wyrok_przestepstwo1_idx` (`id_przestepstwo` ASC),
  CONSTRAINT `fk_przestepstwo_has_wyrok_przestepstwo1`
    FOREIGN KEY (`id_przestepstwo`)
    REFERENCES `mydb`.`przestepstwo` (`id_przestepstwo`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_przestepstwo_has_wyrok_wyrok1`
    FOREIGN KEY (`id_wyrok`)
    REFERENCES `mydb`.`wyrok` (`id_wyrok`)
    ON DELETE CASCADE
    ON UPDATE CASCADE)
ENGINE = InnoDB;

USE `mydb`;

DELIMITER $$
USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`wiezien_AFTER_INSERT_W` AFTER INSERT ON `wiezien` FOR EACH ROW
BEGIN
UPDATE sektor
    SET liczba_wiezniow = liczba_wiezniow + 1
    WHERE id_sektor = (
        SELECT id_sektor
        FROM cela
        WHERE cela.id_cela = NEW.id_cela
    );
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`wiezien_AFTER_UPDATE_W` AFTER UPDATE ON `wiezien` FOR EACH ROW
BEGIN
    -- Zmniejsz licznik w starym sektorze
    UPDATE sektor
    SET liczba_wiezniow = liczba_wiezniow - 1
    WHERE id_sektor = (
        SELECT id_sektor
        FROM cela
        WHERE cela.id_cela = OLD.id_cela
    );

    -- Zwiększ licznik w nowym sektorze
    UPDATE sektor
    SET liczba_wiezniow = liczba_wiezniow + 1
    WHERE id_sektor = (
        SELECT id_sektor
        FROM cela
        WHERE cela.id_cela = NEW.id_cela
    );
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`wiezien_AFTER_DELETE_W` AFTER DELETE ON `wiezien` FOR EACH ROW
BEGIN
    UPDATE sektor
    SET liczba_wiezniow = liczba_wiezniow - 1
    WHERE id_sektor = (
        SELECT id_sektor
        FROM cela
        WHERE cela.id_cela = OLD.id_cela
    );
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`pracownicy_wiezienia_AFTER_INSERT_PW` AFTER INSERT ON `pracownicy_wiezienia` FOR EACH ROW
BEGIN
UPDATE sektor
    SET liczba_pracownikow = liczba_pracownikow + 1
    WHERE id_sektor = NEW.id_sektor;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`pracownicy_wiezienia_AFTER_UPDATE_PW` AFTER UPDATE ON `pracownicy_wiezienia` FOR EACH ROW
BEGIN
    -- Zmniejsz liczbę pracowników w starym sektorze
    UPDATE sektor
    SET liczba_pracownikow = liczba_pracownikow - 1
    WHERE id_sektor = OLD.id_sektor;

    -- Zwiększ liczbę pracowników w nowym sektorze
    UPDATE sektor
    SET liczba_pracownikow = liczba_pracownikow + 1
    WHERE id_sektor = NEW.id_sektor;
END$$

USE `mydb`$$
CREATE DEFINER = CURRENT_USER TRIGGER `mydb`.`pracownicy_wiezienia_AFTER_DELETE_PW` AFTER DELETE ON `pracownicy_wiezienia` FOR EACH ROW
BEGIN
 UPDATE sektor
    SET liczba_pracownikow = liczba_pracownikow - 1
    WHERE id_sektor = OLD.id_sektor;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
